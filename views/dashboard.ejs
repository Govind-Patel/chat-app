<%- include('layout/header.ejs') %>

  <h2 class="mb-4"> Hii, <%= user.name %>
  </h2>
  <div class="row">
    <div class="col-md-4">
      <ul class="list-group">
        <% if(users.length>0){
          for(let i=0;i<users.length;i++){ %>
            <li class="list-group-item list-group-item-dark cursor-pointer user-list" data-id="<%= users[i]['_id'] %>">
              <img src="<%= 'http://localhost:3000/' + users[i]['image'] %>" height="50px" width="50px" alt="">
              <%= users[i].name %>

                <% if (users[i]['is_online']==1) { %>
                  <sup class="online-status" id="<%= users[i]['_id'] %>-status">Online</sup>
                  <% } else { %>
                    <sup class="offline-status" id="<%= users[i]['_id'] %>-status">Offline</sup>
                    <% } %>

            </li>
            <% } } %>
      </ul>


    </div>
    <div class="col-md-8">
      <h3 class="start-head">Click to Start Chat</h3>
      <div class="chat-section">
        <div id="chat-container">

          <!-- <div class="distance-user-chat">
            <h5>Hi</h5>
          </div> -->
        </div>
        <form action="" id="chat-form">
          <input type="text" name="message" id="message" class="border" placeholder="Enter Message" required>
          <input type="submit" name="" id="" value="Send message" class="btn btn-primary">
        </form>
      </div>
    </div>
  </div>

  <!-- Button trigger modal -->
   <!-- <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModalCenter">
    Launch demo modal
  </button>  -->

  <!-- Modal -->
  <div class="modal fade" id="deleteChatModel" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="exampleModalLongTitle">Delete Chat</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <form id="delete-chat-form">
          <div class="modal-body">
            <input type="hidden" name="id" id="delete-message-id">
            <p>Are yoy sure you want to delete below Message?</p>
            <p><b id="delete-message"></b></p>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            <button type="submit" class="btn btn-danger">Delete</button>
          </div>
        </form>
      </div>
    </div>
  </div>
  <script>
    var sender_id = '<%= user._id %>';
    var receiver_id; // Global variable

    var socket = io('/user-name', {
      auth: {
        token: sender_id
      }
    });

    $(document).ready(function ($) {
      $('.user-list').click(function () {
        var userId = $(this).attr('data-id');
        receiver_id = userId; // Assign to the global variable instead of creating a new one
        $('.start-head').hide();
        $('.chat-section').show();

        socket.emit('existsChat', { sender_id: sender_id, receiver_id: receiver_id });
      });

      // Other parts of your code...



      // update user online user status
      socket.on('getOnlineUser', function (data) {
        $('#' + data.user_id + '-status').text('Online');
        $('#' + data.user_id + '-status').removeClass('offline-status');
        $('#' + data.user_id + '-status').addClass('online-status');
      });

      //update user offline user status
      socket.on('getOfflineUser', function (data) {
        $('#' + data.user_id + '-status').text('Offline');
        $('#' + data.user_id + '-status').addClass('offline-status');
        $('#' + data.user_id + '-status').removeClass('online-status');
      });

    // chat save of user 
    $('#chat-form').submit(function(event) {
      event.preventDefault();
      var message = $('#message').val();
      // console.log(receiver_id);
      $.ajax({
        url: '/save-chat',
        type: 'post',
        data: { sender_id: sender_id, receiver_id: receiver_id, message: message },
        success:function(response){
          // console.log(response.success);
          console.log(response.data);
          if(response.success){
            $('#message').val('');
            let chat = response.data.message;
            let html = `
                <div class="current-user-chat" id='`+response.data._id+`'>
                  <h5 >`+ chat + `
                   <i class="fa fa-trash text-danger" aria-hidden="true" data-id='`+response.data._id+`' data-toggle="modal" data-target="#deleteChatModel"></i>
                  </h5>
                </div>
            `;
            $('#chat-container').append(html);
            socket.emit('newChat',response.data);
            scrollChat();
          }else{
            alert(response.data.message);
          }
        }
      });
    });
    socket.on('loadNewChat',function(data){
      if(sender_id == data.receiver_id && receiver_id == data.sender_id){
        let html = `
            <div class="distance-user-chat" id='`+data._id+`'>
              <h5 >`+ data.message + `</h5>
            </div>
        `;
        $('#chat-container').append(html);
      }
      scrollChat();
    });

      // load old chats 
    socket.on('loadsChat', function(data) {
      $('#chat-container').html('');
      var chats = data.chats;
      let html = '';
      for (let x = 0; x < chats.length; x++) {
        let addClass;
        if (chats[x]['sender_id'] == sender_id) {
          addClass = 'current-user-chat';
        } else {
          addClass = 'distance-user-chat';
        }
        html += `
            <div class='` + addClass + `' id='`+chats[x]['_id'] +`'>
              <h5 >` + chats[x]['message'] + ``;
                if (chats[x]['sender_id'] == sender_id) {
                  html += ` <i class="fa fa-trash text-danger" aria-hidden="true" data-id='`+chats[x]['_id'] +`' data-toggle="modal" data-target="#deleteChatModel"></i>`;
                } 
              html += `
              </h5>
            </div>
        `;
      }
      $('#chat-container').append(html);
      scrollChat();
  });

function scrollChat(){
  $('#chat-container').animate({
    scrollTop:$('#chat-container').offset().top + $('#chat-container')[0].scrollHeight
  },0);
}

// delete chat message
$(document).on('click','.fa-trash',function(){
  let msg = $(this).parent().text();
  $('#delete-message').text(msg);
  $('#delete-message-id').val($(this).attr('data-id'));
  // console.log(msg);`
})

$('#delete-chat-form').submit(function(event){
  event.preventDefault();
  var id = $('#delete-message-id').val();
  // console.log(id);
  $.ajax({
    url:'/delete-chat',
    type:'POST',
    data:{id:id},
    success:function(res){
      if(res.success){
        $('#'+id).remove();
        $('#deleteChatModel').modal('hide');
        socket.emit('chatDeleted',id);
      }else{
        alert(res.msg);
      }
    }
  });
});

socket.on('chatMessageDeleted',function(id){
  $('#'+id).remove();
});

});


  </script>
  <%- include('layout/footer.ejs') %>